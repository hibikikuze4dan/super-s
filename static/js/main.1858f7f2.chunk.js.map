{"version":3,"sources":["features/counter/Counter.module.css","logo.svg","features/counter/counterSlice.js","data/index.js","app/navigationSlice.js","app/dataSlice.js","components/title/index.js","components/description/Matcher.js","components/description/index.js","components/opener/index.js","app/choicesSlice.js","utils/index.js","components/choice-card/PointHandler.js","components/choice-card/CardStructure.js","components/choice-card/BasicCard.js","components/choice-list/index.js","components/section/section-specific-components/GenderChange.js","components/section/SectionSpecificComponentHandler.js","components/section/index.js","components/section-routes/index.js","components/navigation-bar/NavDrawerLinks.js","components/navigation-bar/NavDrawerButton.js","components/navigation-bar/index.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","cyoaData","navigationSlice","location","last","window","href","split","updateLocation","getLocation","navigation","dataSlice","getSections","data","sections","getSectionKeys","createSelector","Object","keys","getCurrentSection","Title","text","isChoice","Grid","container","justify","Typography","variant","style","textTransform","color","fontSize","defaultProps","PowerPointsMatcher","str","result","match","index","length","valid","children","props","className","Matcher","Description","map","ind","content","matchers","defautProps","Opener","useSelector","title","description","spacing","backgroundColor","item","xs","choicesSlice","sectionSpecific","genderChange","gender","points","power","appearance","hair_color","body_figure","drawbacks","updateGenderChange","setGender","setAppearance","setHairColor","setBodyFigure","updateDrawbacks","drawback","includes","filter","getGenderChange","choices","getChoices","getChoicesExcludingSectionSpecific","filters","reduce","acc","choiceSection","key","getChoicesExcludingDrawbacks","getChoicesExcludingSpecialSections","getChoicesExcludingSectionSpecificAsFlatArray","flatMap","Array","isArray","getChoicesExcludingDrawbacksAsFlatArray","getChoicesExcludingSpecialSectionsAsFlatArray","getDrawbacks","getCurrentLocationsChoices","getCurrentLocationsChoicesAsArray","currentChoices","genderPointsHandler","isChangingGender","drawbacksPointHandler","choicesExcludingDrawbacks","choicesExcludingDrawbacksTitles","choice","sum","connectedChoice","getPowerPointsForBasicSections","getPointsFromChoice","compilePoints","genderPoints","drawbackPoints","basicSectionsPoints","getCompiledPoints","lossOrGain","num","toString","getTitles","objOrArr","PointHandler","pointsOfType","pointType","CardStructure","handleClick","isDrawback","picked","disabled","normalColor","Card","Button","onClick","actionsByLocation","BasicCard","otherProps","dispatch","useDispatch","find","currentDrawbacks","currentLocationChoices","allChoices","isDisabled","console","log","exclude","undefined","currentChoicesTitles","some","ex","checkIfDisabled","withWidth","width","cols","GridList","cellHeight","isWidthUp","GridListTile","GenderChange","changingGender","FormControl","component","FormLabel","FormGroup","aria-label","row","onChange","justifyContent","FormControlLabel","control","Checkbox","checked","label","SectionSpecificComponentHandler","currentSection","sectionComponents","Section","SectionRoutes","routePaths","route","path","NavDrawerLinks","handleSelect","links","link","fullWidth","Link","to","startCase","NavDrawerButton","useState","open","toggleOpen","IconButton","Menu","Drawer","onClose","NaviationBar","AppBar","position","alignContent","height","paddingRight","App","padding","overflowX","render","configureStore","reducer","counter","counterReducer","navigationReducer","dataReducer","choicesReduces","Boolean","hostname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1858f7f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import CYOA from \"./cyoa.json\";\n\nexport const cyoaData = CYOA;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { last } from \"lodash\";\n\nexport const navigationSlice = createSlice({\n  name: \"navigation\",\n  initialState: {\n    location: last(window.location.href.split(\"/\")),\n  },\n  reducers: {\n    updateLocation: (state, action) => {\n      state.location = action.payload;\n    },\n  },\n});\n\nexport const { updateLocation } = navigationSlice.actions;\n\nexport const getLocation = (state) => state.navigation.location;\n\nexport default navigationSlice.reducer;\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport { last } from \"lodash\";\nimport { cyoaData } from \"../data\";\nimport { getLocation } from \"./navigationSlice\";\n\nexport const dataSlice = createSlice({\n  name: \"data\",\n  initialState: cyoaData,\n  reducers: {},\n});\n\nexport const getSections = (state) => state.data.sections;\n\nexport const getSectionKeys = createSelector(getSections, (sections) => {\n  return Object.keys(sections);\n});\n\nexport const getCurrentSection = createSelector(\n  getLocation,\n  getSections,\n  (location, sections) => {\n    return sections[location];\n  }\n);\n\nexport default dataSlice.reducer;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Title = ({ text, isChoice }) => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography\n        variant={isChoice ? \"h4\" : \"h2\"}\n        style={{\n          textTransform: \"uppercase\",\n          color: \"white\",\n          fontSize: isChoice ? \"2.125rem\" : \"3rem\",\n        }}\n      >\n        {text}\n      </Typography>\n    </Grid>\n  );\n};\n\nTitle.defaultProps = {\n  text: \"\",\n  isChoice: false,\n};\n\nexport default Title;\n","import { Matcher } from \"interweave\";\n\nexport class PowerPointsMatcher extends Matcher {\n  match(str) {\n    const result = str.match(/Power Points/);\n\n    if (!result) {\n      return null;\n    }\n\n    return {\n      index: result.index,\n      length: result[0].length,\n      match: result[0],\n      valid: true,\n    };\n  }\n\n  replaceWith(children, props) {\n    return (\n      <span className=\"Interweave-Blue\" {...props}>\n        {children}\n      </span>\n    );\n  }\n\n  asTag() {\n    return \"span\";\n  }\n}\n","import { Grid, Typography } from \"@material-ui/core\";\nimport Interweave from \"interweave\";\nimport React, { Fragment } from \"react\";\nimport { PowerPointsMatcher } from \"./Matcher\";\n\nconst Description = ({ text, isChoice }) => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography style={{ color: \"white\" }}>\n        {text.map((str, ind) => {\n          return (\n            <Fragment key={`interweave-desc-${ind}`}>\n              <Interweave\n                content={str}\n                matchers={[new PowerPointsMatcher(\"PP\")]}\n              />\n              {text.length - 1 !== ind && (\n                <>\n                  <br />\n                  <br />\n                </>\n              )}\n            </Fragment>\n          );\n        })}\n      </Typography>\n    </Grid>\n  );\n};\n\nDescription.defautProps = {\n  text: [],\n};\n\nexport default Description;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport Title from \"../title\";\nimport Description from \"../description\";\n\nconst Opener = () => {\n  const { title, description } = useSelector(getCurrentSection);\n\n  return (\n    <Grid container spacing={4} style={{ backgroundColor: \"#bb001cff\" }}>\n      <Grid item xs={12}>\n        <Title text={title} />\n      </Grid>\n      <Grid item xs={12}>\n        <Description text={description} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Opener;\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport { reduce, last, sum, flatMap, map } from \"lodash\";\nimport { getLocation } from \"./navigationSlice\";\n\nexport const choicesSlice = createSlice({\n  name: \"choices\",\n  initialState: {\n    sectionSpecific: {\n      genderChange: true,\n    },\n    gender: {\n      points: {\n        power: 0,\n      },\n    },\n    appearance: {\n      points: {\n        power: 0,\n      },\n    },\n    hair_color: {\n      points: {\n        power: 0,\n      },\n    },\n    body_figure: {\n      points: {\n        power: 0,\n      },\n    },\n    drawbacks: [],\n  },\n  reducers: {\n    updateGenderChange: (state, action) => {\n      state.sectionSpecific = {\n        ...state.sectionSpecific,\n        genderChange: action.payload,\n      };\n    },\n    setGender: (state, action) => {\n      state.gender = action.payload;\n    },\n    setAppearance: (state, action) => {\n      state.appearance = action.payload;\n    },\n    setHairColor: (state, action) => {\n      state.hair_color = action.payload;\n    },\n    setBodyFigure: (state, action) => {\n      state.body_figure = action.payload;\n    },\n    updateDrawbacks: (state, action) => {\n      const titles = state.drawbacks.map((drawback) => drawback.title);\n      if (titles.includes(action.payload.title)) {\n        state.drawbacks = [\n          ...state.drawbacks.filter(\n            (drawback) => drawback.title !== action.payload.title\n          ),\n        ];\n      } else {\n        state.drawbacks = [...state.drawbacks, action.payload];\n      }\n    },\n  },\n});\n\nexport const {\n  updateGenderChange,\n  setGender,\n  setAppearance,\n  setHairColor,\n  setBodyFigure,\n  updateDrawbacks,\n} = choicesSlice.actions;\n\nexport const getSectionSpecific = (state) => state.choices.sectionSpecific;\n\nexport const getGenderChange = createSelector(\n  getSectionSpecific,\n  (sectionSpecific) => {\n    return sectionSpecific.genderChange;\n  }\n);\n\nexport const getChoices = (state) => state.choices;\n\nexport const getChoicesExcludingSectionSpecific = createSelector(\n  getChoices,\n  (choices) => {\n    const filters = [\"sectionSpecific\"];\n    return reduce(\n      choices,\n      (acc, choiceSection, key) => {\n        if (!filters.includes(key)) {\n          acc[key] = choiceSection;\n        }\n        return acc;\n      },\n      {}\n    );\n  }\n);\n\nexport const getChoicesExcludingDrawbacks = createSelector(\n  getChoices,\n  (choices) => {\n    const filters = [\"drawbacks\", \"sectionSpecific\"];\n    return reduce(\n      choices,\n      (acc, choiceSection, key) => {\n        if (!filters.includes(key)) {\n          acc[key] = choiceSection;\n        }\n        return acc;\n      },\n      {}\n    );\n  }\n);\n\nexport const getChoicesExcludingSpecialSections = createSelector(\n  getChoices,\n  (choices) => {\n    const filters = [\"drawbacks\", \"sectionSpecific\", \"gender\"];\n    return reduce(\n      choices,\n      (acc, choiceSection, key) => {\n        if (!filters.includes(key)) {\n          acc[key] = choiceSection;\n        }\n        return acc;\n      },\n      {}\n    );\n  }\n);\n\nexport const getChoicesExcludingSectionSpecificAsFlatArray = createSelector(\n  getChoicesExcludingSectionSpecific,\n  (choices) => {\n    return flatMap(choices, (choiceSection) => {\n      return Array.isArray(choiceSection) ? choiceSection : [choiceSection];\n    });\n  }\n);\n\nexport const getChoicesExcludingDrawbacksAsFlatArray = createSelector(\n  getChoicesExcludingDrawbacks,\n  (choices) => {\n    return flatMap(choices, (choiceSection) => {\n      return Array.isArray(choiceSection) ? choiceSection : [choiceSection];\n    });\n  }\n);\n\nexport const getChoicesExcludingSpecialSectionsAsFlatArray = createSelector(\n  getChoicesExcludingSpecialSections,\n  (choices) => {\n    return flatMap(choices, (choiceSection) => {\n      return Array.isArray(choiceSection) ? choiceSection : [choiceSection];\n    });\n  }\n);\n\nexport const getGender = (state) => state.choices.gender;\n\nexport const getAppearance = (state) => state.choices.appearance;\n\nexport const getHairColor = (state) => state.choices.hair_color;\n\nexport const getBodyFigure = (state) => state.choices.body_figure;\n\nexport const getDrawbacks = (state) => state.choices.drawbacks;\n\nexport const getCurrentLocationsChoices = createSelector(\n  getChoices,\n  getLocation,\n  (choices, location) => {\n    return choices[location] || [];\n  }\n);\n\nexport const getCurrentLocationsChoicesAsArray = createSelector(\n  getCurrentLocationsChoices,\n  (currentChoices) => {\n    return Array.isArray(currentChoices) ? currentChoices : [currentChoices];\n  }\n);\n\nconst genderPointsHandler = createSelector(\n  getGender,\n  getGenderChange,\n  (gender, isChangingGender) => {\n    if (isChangingGender && gender?.title) {\n      return gender.points.power + 10;\n    }\n    return gender.points.power;\n  }\n);\n\nconst drawbacksPointHandler = createSelector(\n  getDrawbacks,\n  getChoicesExcludingDrawbacksAsFlatArray,\n  (drawbacks, choicesExcludingDrawbacks) => {\n    const choicesExcludingDrawbacksTitles = choicesExcludingDrawbacks.map(\n      (choice) => choice.title\n    );\n    return sum(\n      drawbacks.map((drawback) => {\n        if (\n          choicesExcludingDrawbacksTitles.includes(drawback.connectedChoice)\n        ) {\n          return drawback.points.power + 3;\n        }\n        return drawback.points.power;\n      })\n    );\n  }\n);\n\nconst getPointsFromChoice = (choice) => {\n  return choice.points;\n};\n\nconst getPowerPointsForBasicSections = createSelector(\n  getChoicesExcludingSpecialSectionsAsFlatArray,\n  (choices) => {\n    return sum(map(choices, (choice) => getPointsFromChoice(choice).power));\n  }\n);\n\nconst compilePoints = createSelector(\n  genderPointsHandler,\n  drawbacksPointHandler,\n  getPowerPointsForBasicSections,\n  (genderPoints, drawbackPoints, basicSectionsPoints) => {\n    return {\n      power: sum([0, genderPoints, drawbackPoints, basicSectionsPoints]),\n    };\n  }\n);\n\nexport const getCompiledPoints = createSelector(\n  compilePoints,\n  (points) => points\n);\n\nexport default choicesSlice.reducer;\n","export const lossOrGain = (num = 0) => {\n  if (num > 0) {\n    return `+${num}`;\n  } else if (num < 0) {\n    return `-${num}`;\n  }\n  return num.toString();\n};\n\nexport const getTitles = (objOrArr) => {\n  return Array.isArray(objOrArr)\n    ? objOrArr.map((data) => data.title)\n    : objOrArr.title;\n};\n","import { Typography } from \"@material-ui/core\";\nimport { map } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport { lossOrGain } from \"../../utils\";\n\nconst PointHandler = ({ points }) => {\n  return (\n    <Typography style={{ color: \"white\" }}>\n      {map(points, (pointsOfType, pointType) => {\n        return (\n          <Fragment key={`${pointType}-fragment`}>\n            {pointsOfType >= 0 ? \"Gain: \" : \"Cost: \"}\n            <span style={{ color: \"blue\" }}>{lossOrGain(pointsOfType)}</span>\n          </Fragment>\n        );\n      })}\n    </Typography>\n  );\n};\n\nexport default PointHandler;\n","import { Button, Card, Grid, Typography } from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport Description from \"../description\";\nimport Title from \"../title\";\nimport { lossOrGain } from \"../../utils\";\nimport { map } from \"lodash\";\nimport PointHandler from \"./PointHandler\";\n\nconst CardStructure = ({\n  title,\n  description,\n  points,\n  handleClick,\n  isDrawback,\n  picked,\n  disabled,\n  ...otherProps\n}) => {\n  const normalColor = isDrawback ? \"#292929ff\" : \"black\";\n  return (\n    <Card style={{ backgroundColor: !picked ? normalColor : \"green\" }}>\n      <Button onClick={handleClick} disabled={disabled}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Title text={title} isChoice />\n          </Grid>\n          <Grid item xs={12}>\n            <PointHandler points={points} />\n          </Grid>\n          <Grid item xs={12}>\n            <Description text={description} isChoice />\n          </Grid>\n        </Grid>\n      </Button>\n    </Card>\n  );\n};\n\nCardStructure.defaultProps = {\n  disabled: false,\n};\n\nexport default CardStructure;\n","import { Divider, Grid } from \"@material-ui/core\";\nimport { find } from \"lodash\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getChoicesExcludingSectionSpecificAsFlatArray,\n  getCurrentLocationsChoicesAsArray,\n  getDrawbacks,\n  setAppearance,\n  setBodyFigure,\n  setGender,\n  setHairColor,\n  updateDrawbacks,\n} from \"../../app/choicesSlice\";\nimport { getLocation } from \"../../app/navigationSlice\";\nimport { getTitles } from \"../../utils\";\n\nimport CardStructure from \"./CardStructure\";\n\nconst actionsByLocation = {\n  gender: setGender,\n  appearance: setAppearance,\n  hair_color: setHairColor,\n  body_figure: setBodyFigure,\n};\n\nconst checkIfDisabled = (drawback, currentChoices) => {\n  console.log(drawback, currentChoices);\n  if (\n    drawback?.exclude?.length === 0 ||\n    drawback?.exclude?.length === undefined\n  ) {\n    return false;\n  }\n  const currentChoicesTitles = currentChoices.map((choice) => choice.title);\n  console.log(currentChoicesTitles);\n  return drawback.exclude.some((ex) => currentChoicesTitles.includes(ex));\n};\n\nconst BasicCard = ({ title, ...otherProps }) => {\n  const dispatch = useDispatch();\n  const drawback = useSelector((state) =>\n    find(state.data.drawbacks, { connectedChoice: title })\n  );\n  const currentDrawbacks = useSelector(getDrawbacks);\n  const location = useSelector(getLocation);\n  const currentLocationChoices = useSelector(getCurrentLocationsChoicesAsArray);\n  const allChoices = useSelector(getChoicesExcludingSectionSpecificAsFlatArray);\n  const isDisabled = checkIfDisabled(drawback, allChoices);\n  console.log(isDisabled);\n\n  return (\n    <Grid container spacing={1} style={{ backgroundColor: \"black\" }}>\n      <Grid item xs={12}>\n        <CardStructure\n          title={title}\n          handleClick={() =>\n            dispatch(actionsByLocation[location]({ title, ...otherProps }))\n          }\n          picked={getTitles(currentLocationChoices).includes(title)}\n          {...otherProps}\n        />\n      </Grid>\n      {/* <Grid item xs={12}>\n        <Divider />\n      </Grid> */}\n      <Grid item xs={12}>\n        <CardStructure\n          handleClick={() => dispatch(updateDrawbacks(drawback))}\n          isDrawback\n          picked={getTitles(currentDrawbacks).includes(drawback.title)}\n          disabled={isDisabled}\n          {...drawback}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BasicCard;\n","import {\n  Grid,\n  GridList,\n  GridListTile,\n  isWidthUp,\n  withTheme,\n  withWidth,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport BasicCard from \"../choice-card/BasicCard\";\nimport CardStructure from \"../choice-card/CardStructure\";\n\nconst ChoiceList = ({ width }) => {\n  const { title, cols, choices } = useSelector(getCurrentSection);\n\n  console.log(width);\n  return (\n    <Grid container>\n      <GridList\n        cellHeight=\"auto\"\n        cols={isWidthUp(\"sm\", width) ? cols : 1}\n        spacing={32}\n      >\n        {choices?.map((choice, index) => {\n          return (\n            <GridListTile key={`choice-${title}-${index}`}>\n              <BasicCard {...choice} />\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </Grid>\n  );\n};\n\nexport default withWidth()(ChoiceList);\n","import {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGenderChange, updateGenderChange } from \"../../../app/choicesSlice\";\n\nexport const GenderChange = () => {\n  const dispatch = useDispatch();\n  const changingGender = useSelector(getGenderChange);\n\n  return (\n    <>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Are you changing your gender?</FormLabel>\n        <FormGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={changingGender}\n          row\n          onChange={() => dispatch(updateGenderChange(!changingGender))}\n          style={{ justifyContent: \"center\" }}\n        >\n          <FormControlLabel\n            control={\n              <Checkbox value={changingGender} checked={changingGender} />\n            }\n            label={changingGender ? \"Yes\" : \"No\"}\n          />\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport { getLocation } from \"../../app/navigationSlice\";\nimport { GenderChange } from \"./section-specific-components/GenderChange\";\n\nconst SectionSpecificComponentHandler = () => {\n  const currentSection = useSelector(getLocation);\n  const sectionComponents = {\n    gender: <GenderChange />,\n  };\n  return (\n    <Grid container justify=\"center\">\n      {sectionComponents[currentSection] || null}\n    </Grid>\n  );\n};\n\nexport default SectionSpecificComponentHandler;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport ChoiceList from \"../choice-list\";\nimport Opener from \"../opener\";\nimport SectionSpecificComponentHandler from \"./SectionSpecificComponentHandler\";\n\nconst Section = () => {\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Opener />\n      </Grid>\n      <Grid item xs={12}>\n        <SectionSpecificComponentHandler />\n      </Grid>\n      <Grid item xs={12}>\n        <ChoiceList />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { getSectionKeys } from \"../../app/dataSlice\";\nimport Section from \"../section\";\n\nconst SectionRoutes = () => {\n  const routePaths = useSelector(getSectionKeys);\n  return (\n    <>\n      {routePaths.map((route, index) => {\n        return (\n          <Route path={`/${route}`} key={`section-route-${index}`}>\n            <Section />\n          </Route>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SectionRoutes;\n","import { Button, Grid } from \"@material-ui/core\";\nimport { startCase } from \"lodash\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getSectionKeys } from \"../../app/dataSlice\";\nimport { updateLocation } from \"../../app/navigationSlice\";\n\nconst NavDrawerLinks = ({ handleSelect }) => {\n  const dispatch = useDispatch();\n  const links = useSelector(getSectionKeys);\n  return (\n    <Grid container>\n      {links.map((link, ind) => {\n        return (\n          <Grid item xs={12} key={`navDrawerLinks-link-${ind}`}>\n            <Button\n              fullWidth\n              onClick={() => {\n                dispatch(updateLocation(link));\n                handleSelect(false);\n              }}\n              component={Link}\n              to={`/${link}`}\n            >\n              {startCase(link)}\n            </Button>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default NavDrawerLinks;\n","import { Drawer, IconButton } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport NavDrawerLinks from \"./NavDrawerLinks\";\n\nconst NavDrawerButton = () => {\n  const [open, toggleOpen] = useState(false);\n  return (\n    <>\n      <IconButton onClick={() => toggleOpen(!open)}>\n        <Menu style={{ color: \"white\" }} fontSize=\"large\" />\n      </IconButton>\n      <Drawer open={open} onClose={() => toggleOpen(!open)}>\n        <NavDrawerLinks handleSelect={toggleOpen} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default NavDrawerButton;\n","import { AppBar, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCompiledPoints } from \"../../app/choicesSlice\";\nimport NavDrawerButton from \"./NavDrawerButton\";\n\nconst NaviationBar = () => {\n  const points = useSelector(getCompiledPoints);\n\n  return (\n    <AppBar position=\"fixed\">\n      <Grid container justify=\"space-between\">\n        <Grid item>\n          <NavDrawerButton />\n        </Grid>\n        <Grid item>\n          <Grid\n            container\n            alignContent=\"center\"\n            style={{ height: \"100%\", paddingRight: \"16px\" }}\n          >\n            <Typography>{points.power}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default NaviationBar;\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport \"./App.css\";\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Opener from \"./components/opener\";\r\nimport SectionRoutes from \"./components/section-routes\";\r\nimport NaviationBar from \"./components/navigation-bar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <NaviationBar />\r\n        <Switch>\r\n          <div style={{ padding: \"64px 8px\", overflowX: \"hidden\" }}>\r\n            <SectionRoutes />\r\n            <Route path=\"/\" render={() => <Redirect to=\"/opening\" />} />\r\n          </div>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport navigationReducer from \"./navigationSlice\";\r\nimport dataReducer from \"./dataSlice\";\r\nimport choicesReduces from \"./choicesSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    navigation: navigationReducer,\r\n    data: dataReducer,\r\n    choices: choicesReduces,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}