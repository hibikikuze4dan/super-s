{"version":3,"sources":["features/counter/Counter.module.css","logo.svg","features/counter/counterSlice.js","data/index.js","app/navigationSlice.js","app/dataSlice.js","components/title/index.js","components/description/Matcher.js","components/description/index.js","components/opener/index.js","app/choicesSlice.js","app/selectors.js","utils/index.js","components/choice-card/PointHandler.js","components/choice-card/ExcludeHandler.js","components/choice-card/RequirementInterweave.js","components/choice-card/CardStructure.js","components/choice-card/BasicCard.js","components/choice-list/index.js","components/section/section-specific-components/GenderChange.js","components/section/SectionSpecificComponentHandler.js","components/section/index.js","components/section-routes/index.js","components/navigation-bar/NavDrawerLinks.js","components/navigation-bar/NavDrawerButton.js","components/navigation-bar/index.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","cyoaData","navigationSlice","location","last","window","href","split","updateLocation","getLocation","navigation","dataSlice","getSections","data","sections","getSectionKeys","createSelector","Object","keys","getCurrentSection","Title","text","isChoice","Grid","container","justify","Typography","variant","style","textTransform","color","fontSize","defaultProps","PowerPointsMatcher","str","result","match","index","length","valid","children","props","className","Matcher","Description","map","ind","content","matchers","defautProps","Opener","isCloser","useSelector","title","description","others","closer","spacing","backgroundColor","item","xs","updateDrawbbacksBasedOnExcludeAndRequire","choicesExcludingDrawbacks","choices","filters","reduce","acc","choiceSection","key","includes","flatMap","Array","isArray","getChoicesExcludingDrawbacksFlattened","choice","console","log","drawbacks","filter","drawback","exclude","require","required","some","requirement","excludement","choicesSlice","sectionSpecific","genderChange","gender","points","power","appearance","hair_color","body_figure","body_size","breast_size","butt_size","genitals","updateGenderChange","setGender","setAppearance","setHairColor","setBodyFigure","setBodySize","setBreastSize","setButtSize","updateGenitals","entryExists","genitalEntry","hasPenisVagina","updateDrawbacks","getGenderChange","getChoices","getChoicesExcludingSectionSpecific","getChoicesExcludingDrawbacks","getChoicesExcludingSpecialSections","getChoicesExcludingSectionSpecificAsFlatArray","getChoicesExcludingDrawbacksAsFlatArray","getChoicesExcludingSpecialSectionsAsFlatArray","getDrawbacks","getCurrentLocationsChoices","getCurrentLocationsChoicesAsArray","currentChoices","genderPointsHandler","isChangingGender","drawbacksPointHandler","choicesExcludingDrawbacksIDs","id","sum","connectedChoiceIDs","connectedChoice","getPowerPointsForBasicSections","getPointsFromChoice","compilePoints","genderPoints","drawbackPoints","basicSectionsPoints","getCompiledPoints","lossOrGain","num","toString","getTitles","objOrArr","specialDrawbacks","checkIfDisabled","undefined","drawbackExcludes","exception","ex","excludes","currentChoicesTitles","noExcludionsPresent","every","requirementsMet","req","specialDrawbackDisabledHandler","theExcluded","theRequired","excludeDisable","requiredEnable","PointHandler","pointsOfType","pointType","ExcludeHandler","requires","RequirementMatcher","RequirementInterweave","textSnippet","CardStructure","handleClick","isDrawback","picked","disabled","customRequirementText","normalColor","Card","Button","onClick","actionsByLocation","BasicCard","otherProps","dispatch","useDispatch","find","currentDrawbacks","currentLocationChoices","allChoices","isDisabled","withWidth","width","cols","GridList","cellHeight","isWidthUp","GridListTile","GenderChange","changingGender","FormControl","component","FormLabel","FormGroup","aria-label","row","onChange","justifyContent","FormControlLabel","control","Checkbox","checked","label","SectionSpecificComponentHandler","currentSection","sectionComponents","Section","SectionRoutes","routePaths","route","path","NavDrawerLinks","handleSelect","links","link","fullWidth","Link","to","startCase","NavDrawerButton","useState","open","toggleOpen","IconButton","Menu","Drawer","onClose","NaviationBar","AppBar","position","alignContent","height","paddingRight","App","padding","overflowX","render","configureStore","reducer","counter","counterReducer","navigationReducer","dataReducer","choicesReduces","Boolean","hostname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f086c48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import CYOA from \"./cyoa.json\";\n\nexport const cyoaData = CYOA;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { last } from \"lodash\";\n\nexport const navigationSlice = createSlice({\n  name: \"navigation\",\n  initialState: {\n    location: last(window.location.href.split(\"/\")),\n  },\n  reducers: {\n    updateLocation: (state, action) => {\n      state.location = action.payload;\n    },\n  },\n});\n\nexport const { updateLocation } = navigationSlice.actions;\n\nexport const getLocation = (state) => state.navigation.location;\n\nexport default navigationSlice.reducer;\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport { last } from \"lodash\";\nimport { cyoaData } from \"../data\";\nimport { getLocation } from \"./navigationSlice\";\n\nexport const dataSlice = createSlice({\n  name: \"data\",\n  initialState: cyoaData,\n  reducers: {},\n});\n\nexport const getSections = (state) => state.data.sections;\n\nexport const getSectionKeys = createSelector(getSections, (sections) => {\n  return Object.keys(sections);\n});\n\nexport const getCurrentSection = createSelector(\n  getLocation,\n  getSections,\n  (location, sections) => {\n    return sections[location];\n  }\n);\n\nexport default dataSlice.reducer;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Title = ({ text, isChoice }) => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography\n        variant={isChoice ? \"h4\" : \"h2\"}\n        style={{\n          textTransform: \"uppercase\",\n          color: \"white\",\n          fontSize: isChoice ? \"2.125rem\" : \"3rem\",\n        }}\n      >\n        {text}\n      </Typography>\n    </Grid>\n  );\n};\n\nTitle.defaultProps = {\n  text: \"\",\n  isChoice: false,\n};\n\nexport default Title;\n","import { Matcher } from \"interweave\";\n\nexport class PowerPointsMatcher extends Matcher {\n  match(str) {\n    const result = str.match(/Power Points/);\n\n    if (!result) {\n      return null;\n    }\n\n    return {\n      index: result.index,\n      length: result[0].length,\n      match: result[0],\n      valid: true,\n    };\n  }\n\n  replaceWith(children, props) {\n    return (\n      <span className=\"Interweave-Blue\" {...props}>\n        {children}\n      </span>\n    );\n  }\n\n  asTag() {\n    return \"span\";\n  }\n}\n","import { Grid, Typography } from \"@material-ui/core\";\nimport Interweave from \"interweave\";\nimport React, { Fragment } from \"react\";\nimport { PowerPointsMatcher } from \"./Matcher\";\n\nconst Description = ({ text, isChoice }) => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography style={{ color: \"white\" }}>\n        {text.map((str, ind) => {\n          return (\n            <Fragment key={`interweave-desc-${ind}`}>\n              <Interweave\n                content={str}\n                matchers={[new PowerPointsMatcher(\"PP\")]}\n              />\n              {text.length - 1 !== ind && (\n                <>\n                  <br />\n                  <br />\n                </>\n              )}\n            </Fragment>\n          );\n        })}\n      </Typography>\n    </Grid>\n  );\n};\n\nDescription.defautProps = {\n  text: [],\n};\n\nexport default Description;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport Title from \"../title\";\nimport Description from \"../description\";\n\nconst Opener = ({ isCloser }) => {\n  const { title, description, ...others } = useSelector(getCurrentSection);\n  const noShow = isCloser && !others?.closer;\n  return noShow ? null : (\n    <Grid container spacing={4} style={{ backgroundColor: \"#bb001cff\" }}>\n      {!isCloser && (\n        <Grid item xs={12}>\n          <Title text={title} />\n        </Grid>\n      )}\n      <Grid item xs={12}>\n        <Description text={isCloser ? others?.closer || [] : description} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Opener;\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport { reduce, flatMap } from \"lodash\";\n\nconst getChoicesExcludingDrawbacksFlattened = (choices) => {\n  const filters = [\"drawbacks\", \"sectionSpecific\"];\n  const choicesExcludingDrawbacks = reduce(\n    choices,\n    (acc, choiceSection, key) => {\n      if (!filters.includes(key)) {\n        acc[key] = choiceSection;\n      }\n      return acc;\n    },\n    {}\n  );\n  return flatMap(choicesExcludingDrawbacks, (choiceSection) => {\n    return Array.isArray(choiceSection) ? choiceSection : [choiceSection];\n  });\n};\n\nconst updateDrawbbacksBasedOnExcludeAndRequire = (state) => {\n  const choicesExcludingDrawbacks = getChoicesExcludingDrawbacksFlattened(\n    state\n  ).map((choice) => choice.title);\n  console.log(state);\n  return [\n    ...state.drawbacks.filter((drawback) => {\n      const exclude = drawback?.exclude || [];\n      const require = drawback?.required || [];\n      if (require.length === 0 && exclude.length === 0) {\n        return true;\n      } else if (exclude.length === 0) {\n        return require.some((requirement) =>\n          choicesExcludingDrawbacks.includes(requirement)\n        );\n      } else if (require.length === 0) {\n        return !exclude.some((excludement) =>\n          choicesExcludingDrawbacks.includes(excludement)\n        );\n      }\n      return (\n        !require.some((requirement) =>\n          choicesExcludingDrawbacks.includes(requirement)\n        ) &&\n        exclude.some((excludement) =>\n          choicesExcludingDrawbacks.includes(excludement)\n        )\n      );\n    }),\n  ];\n};\n\nexport const choicesSlice = createSlice({\n  name: \"choices\",\n  initialState: {\n    sectionSpecific: {\n      genderChange: true,\n    },\n    gender: {\n      points: {\n        power: 0,\n      },\n    },\n    appearance: {\n      points: {\n        power: 0,\n      },\n    },\n    hair_color: {\n      points: {\n        power: 0,\n      },\n    },\n    body_figure: {\n      points: {\n        power: 0,\n      },\n    },\n    body_size: {\n      points: {\n        power: 0,\n      },\n    },\n    breast_size: {\n      points: {\n        power: 0,\n      },\n    },\n    butt_size: {\n      points: {\n        power: 0,\n      },\n    },\n    genitals: [],\n    drawbacks: [],\n  },\n  reducers: {\n    updateGenderChange: (state, action) => {\n      state.sectionSpecific = {\n        ...state.sectionSpecific,\n        genderChange: action.payload,\n      };\n    },\n    setGender: (state, action) => {\n      state.gender = action.payload;\n    },\n    setAppearance: (state, action) => {\n      state.appearance = action.payload;\n    },\n    setHairColor: (state, action) => {\n      state.hair_color = action.payload;\n    },\n    setBodyFigure: (state, action) => {\n      state.body_figure = action.payload;\n      state.drawbacks = updateDrawbbacksBasedOnExcludeAndRequire(state);\n    },\n    setBodySize: (state, action) => {\n      state.body_size = action.payload;\n      state.drawbacks = updateDrawbbacksBasedOnExcludeAndRequire(state);\n    },\n    setBreastSize: (state, action) => {\n      state.breast_size = action.payload;\n      state.drawbacks = updateDrawbbacksBasedOnExcludeAndRequire(state);\n    },\n    setButtSize: (state, action) => {\n      state.butt_size = action.payload;\n      state.drawbacks = updateDrawbbacksBasedOnExcludeAndRequire(state);\n    },\n    updateGenitals: (state, action) => {\n      const entryExists = state.genitals.some(\n        (genitalEntry) => genitalEntry.title === action.payload.title\n      );\n      const hasPenisVagina = state.drawbacks.some(\n        (drawback) => drawback.title === \"Penis Vagina\"\n      );\n      if (entryExists) {\n        state.genitals = [\n          ...state.genitals.filter(\n            (genitalEntry) => genitalEntry.title !== action.payload.title\n          ),\n        ];\n      } else if (hasPenisVagina) {\n        state.genitals = [action.payload, ...state.genitals];\n      } else {\n        state.genitals = [action.payload];\n      }\n      state.drawbacks = updateDrawbbacksBasedOnExcludeAndRequire(state);\n    },\n    updateDrawbacks: (state, action) => {\n      const titles = state.drawbacks.map((drawback) => drawback.title);\n      if (titles.includes(action.payload.title)) {\n        state.drawbacks = [\n          ...state.drawbacks.filter(\n            (drawback) => drawback.title !== action.payload.title\n          ),\n        ];\n      } else {\n        state.drawbacks = [...state.drawbacks, action.payload];\n      }\n    },\n  },\n});\n\nexport const {\n  updateGenderChange,\n  setGender,\n  setAppearance,\n  setHairColor,\n  setBodyFigure,\n  setBodySize,\n  setBreastSize,\n  setButtSize,\n  updateGenitals,\n  updateDrawbacks,\n} = choicesSlice.actions;\n\nexport default choicesSlice.reducer;\n","import { reduce, sum, flatMap, map } from \"lodash\";\nimport { createSelector } from \"@reduxjs/toolkit\";\n\nimport { getLocation } from \"./navigationSlice\";\n\nexport const getSectionSpecific = (state) => state.choices.sectionSpecific;\n\nexport const getGenderChange = createSelector(\n  getSectionSpecific,\n  (sectionSpecific) => {\n    return sectionSpecific.genderChange;\n  }\n);\n\nexport const getChoices = (state) => state.choices;\n\nexport const getChoicesExcludingSectionSpecific = createSelector(\n  getChoices,\n  (choices) => {\n    const filters = [\"sectionSpecific\"];\n    return reduce(\n      choices,\n      (acc, choiceSection, key) => {\n        if (!filters.includes(key)) {\n          acc[key] = choiceSection;\n        }\n        return acc;\n      },\n      {}\n    );\n  }\n);\n\nexport const getChoicesExcludingDrawbacks = createSelector(\n  getChoices,\n  (choices) => {\n    const filters = [\"drawbacks\", \"sectionSpecific\"];\n    return reduce(\n      choices,\n      (acc, choiceSection, key) => {\n        if (!filters.includes(key)) {\n          acc[key] = choiceSection;\n        }\n        return acc;\n      },\n      {}\n    );\n  }\n);\n\nexport const getChoicesExcludingSpecialSections = createSelector(\n  getChoices,\n  (choices) => {\n    const filters = [\"drawbacks\", \"sectionSpecific\", \"gender\"];\n    return reduce(\n      choices,\n      (acc, choiceSection, key) => {\n        if (!filters.includes(key)) {\n          acc[key] = choiceSection;\n        }\n        return acc;\n      },\n      {}\n    );\n  }\n);\n\nexport const getChoicesExcludingSectionSpecificAsFlatArray = createSelector(\n  getChoicesExcludingSectionSpecific,\n  (choices) => {\n    return flatMap(choices, (choiceSection) => {\n      return Array.isArray(choiceSection) ? choiceSection : [choiceSection];\n    });\n  }\n);\n\nexport const getChoicesExcludingDrawbacksAsFlatArray = createSelector(\n  getChoicesExcludingDrawbacks,\n  (choices) => {\n    return flatMap(choices, (choiceSection) => {\n      return Array.isArray(choiceSection) ? choiceSection : [choiceSection];\n    });\n  }\n);\n\nexport const getChoicesExcludingSpecialSectionsAsFlatArray = createSelector(\n  getChoicesExcludingSpecialSections,\n  (choices) => {\n    return flatMap(choices, (choiceSection) => {\n      return Array.isArray(choiceSection) ? choiceSection : [choiceSection];\n    });\n  }\n);\n\nexport const getGender = (state) => state.choices.gender;\n\nexport const getAppearance = (state) => state.choices.appearance;\n\nexport const getHairColor = (state) => state.choices.hair_color;\n\nexport const getBodyFigure = (state) => state.choices.body_figure;\n\nexport const getBodySize = (state) => state.choices.body_size;\n\nexport const getBreastSize = (state) => state.choices.breast_size;\n\nexport const getDrawbacks = (state) => state.choices.drawbacks;\n\nexport const getCurrentLocationsChoices = createSelector(\n  getChoices,\n  getLocation,\n  (choices, location) => {\n    return choices[location] || [];\n  }\n);\n\nexport const getCurrentLocationsChoicesAsArray = createSelector(\n  getCurrentLocationsChoices,\n  (currentChoices) => {\n    return Array.isArray(currentChoices) ? currentChoices : [currentChoices];\n  }\n);\n\nconst genderPointsHandler = createSelector(\n  getGender,\n  getGenderChange,\n  (gender, isChangingGender) => {\n    if (isChangingGender && gender?.title) {\n      return gender.points.power + 10;\n    }\n    return gender.points.power;\n  }\n);\n\nconst drawbacksPointHandler = createSelector(\n  getDrawbacks,\n  getChoicesExcludingDrawbacksAsFlatArray,\n  (drawbacks, choicesExcludingDrawbacks) => {\n    const choicesExcludingDrawbacksIDs = choicesExcludingDrawbacks.map(\n      (choice) => choice.id\n    );\n    console.log(choicesExcludingDrawbacksIDs, choicesExcludingDrawbacks);\n    return sum(\n      drawbacks.map((drawback) => {\n        const isConnectedChoicesIDsArray = Array.isArray(\n          drawback.connectedChoiceIDs\n        );\n        const giveExtraPoints = isConnectedChoicesIDsArray\n          ? drawback.connectedChoiceIDs.some((connectedChoice) =>\n              choicesExcludingDrawbacksIDs.includes(connectedChoice)\n            )\n          : choicesExcludingDrawbacksIDs.includes(drawback.connectedChoiceIDs);\n        if (giveExtraPoints) {\n          return drawback.points.power + 3;\n        }\n        return drawback.points.power;\n      })\n    );\n  }\n);\n\nconst getPointsFromChoice = (choice) => {\n  return choice.points;\n};\n\nconst getPowerPointsForBasicSections = createSelector(\n  getChoicesExcludingSpecialSectionsAsFlatArray,\n  (choices) => {\n    return sum(map(choices, (choice) => getPointsFromChoice(choice).power));\n  }\n);\n\nconst compilePoints = createSelector(\n  genderPointsHandler,\n  drawbacksPointHandler,\n  getPowerPointsForBasicSections,\n  (genderPoints, drawbackPoints, basicSectionsPoints) => {\n    return {\n      power: sum([0, genderPoints, drawbackPoints, basicSectionsPoints]),\n    };\n  }\n);\n\nexport const getCompiledPoints = createSelector(\n  compilePoints,\n  (points) => points\n);\n","export const lossOrGain = (num = 0) => {\n  if (num > 0) {\n    return `+${num}`;\n  } else if (num < 0) {\n    return `-${num}`;\n  }\n  return num.toString();\n};\n\nexport const getTitles = (objOrArr) => {\n  return Array.isArray(objOrArr)\n    ? objOrArr.map((data) => data.title)\n    : objOrArr.title;\n};\n\nconst specialDrawbacks = [\"Premature Ejaculation\", \"Limp Dick\"];\n\nconst specialDrawbackDisabledHandler = (drawback, currentChoices) => {\n  const exceptionMet = currentChoices.some(\n    (choice) => choice.title === drawback.exception.title\n  );\n  const drawbackExcludes = exceptionMet\n    ? drawback.exclude.filter((ex) => ex !== drawback.exception.excludes)\n    : drawback.exclude;\n  if (drawbackExcludes.length === 0 && drawback.required.length === 0) {\n    return true;\n  }\n  const currentChoicesTitles = currentChoices.map((choice) => choice.title);\n  console.log(drawbackExcludes);\n  const noExcludionsPresent = drawbackExcludes.every(\n    (ex) => !currentChoicesTitles.includes(ex)\n  );\n  const requirementsMet =\n    drawback.required.length === 0\n      ? true\n      : drawback.required.some((req) => currentChoicesTitles.includes(req));\n  console.log([drawback, noExcludionsPresent, requirementsMet]);\n  return noExcludionsPresent === true && requirementsMet === true;\n};\n\nexport const checkIfDisabled = (drawback, currentChoices) => {\n  if (\n    (drawback?.exclude?.length === 0 ||\n      drawback?.exclude?.length === undefined) &&\n    (drawback?.required?.length === 0 ||\n      drawback?.required?.length === undefined)\n  ) {\n    return false;\n  }\n  if (specialDrawbacks.includes(drawback.title)) {\n    return !specialDrawbackDisabledHandler(drawback, currentChoices);\n  }\n  const currentChoicesTitles = currentChoices.map((choice) => choice.title);\n  const theExcluded = drawback?.exclude || [];\n  const theRequired = drawback?.required || [];\n  const excludeDisable = theExcluded.some((ex) =>\n    currentChoicesTitles.includes(ex)\n  );\n  const requiredEnable = theRequired.some((req) =>\n    currentChoicesTitles.includes(req)\n  );\n  if (theExcluded.length === 0) {\n    return !requiredEnable;\n  } else if (theRequired.length === 0) {\n    return excludeDisable;\n  }\n  return excludeDisable || !requiredEnable;\n};\n","import { Typography } from \"@material-ui/core\";\nimport { map } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport { lossOrGain } from \"../../utils\";\n\nconst PointHandler = ({ points }) => {\n  return (\n    <Typography style={{ color: \"white\" }}>\n      {map(points, (pointsOfType, pointType) => {\n        return (\n          <Fragment key={`${pointType}-fragment`}>\n            {pointsOfType >= 0 ? \"Gain: \" : \"Cost: \"}\n            <span style={{ color: \"blue\" }}>{lossOrGain(pointsOfType)}</span>\n          </Fragment>\n        );\n      })}\n    </Typography>\n  );\n};\n\nexport default PointHandler;\n","import { Typography } from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\n\nconst ExcludeHandler = ({ excludes, requires }) => {\n  const theExcluded = excludes || [];\n  const theRequired = requires || [];\n\n  return theRequired.length !== 0 || theExcluded.length !== 0 ? (\n    <Typography style={{ color: \"white\" }}>\n      {\"Requirement: \"}\n      {theExcluded.map((exclude, index) => {\n        return (\n          <Fragment key={`${exclude}-${index}`}>\n            {index === theExcluded.length - 1 && index !== 0 && \" and \"}\n            Not <span style={{ color: \"red\" }}>{exclude}</span>\n            {![theExcluded.length - 1].includes(index) &&\n              theExcluded.length > 2 &&\n              \",\"}{\" \"}\n          </Fragment>\n        );\n      })}\n      {theRequired.map((requirement, index) => {\n        return (\n          <Fragment key={`${requirement}-${index}`}>\n            {index === theRequired.length - 1 && index !== 0 && \" or \"}\n            <span style={{ color: \"red\" }}>{requirement}</span>\n            {index !== theRequired.length - 1 && \", \"}\n          </Fragment>\n        );\n      })}\n    </Typography>\n  ) : null;\n};\n\nexport default ExcludeHandler;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport Interweave, { Matcher } from \"interweave\";\nimport React from \"react\";\n\nexport class RequirementMatcher extends Matcher {\n  match(str) {\n    const result = str.match(/Penis Vagina|Always Hard|Vagina/);\n\n    if (!result) {\n      return null;\n    }\n\n    return {\n      index: result.index,\n      length: result[0].length,\n      match: result[0],\n      valid: true,\n    };\n  }\n\n  replaceWith(children, props) {\n    return (\n      <span className=\"Interweave-Red\" {...props}>\n        {children}\n      </span>\n    );\n  }\n\n  asTag() {\n    return \"span\";\n  }\n}\n\nconst RequirementInterweave = ({ text }) => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography style={{ color: \"white\" }}>\n        {text.map((textSnippet, index) => {\n          return (\n            <Interweave\n              key={`${index}-interweave-for-card`}\n              content={textSnippet}\n              matchers={[new RequirementMatcher(\"span\")]}\n            />\n          );\n        })}\n      </Typography>\n    </Grid>\n  );\n};\n\nexport default RequirementInterweave;\n","import { Button, Card, Grid, Typography } from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport Description from \"../description\";\nimport Title from \"../title\";\nimport { lossOrGain } from \"../../utils\";\nimport { map } from \"lodash\";\nimport PointHandler from \"./PointHandler\";\nimport ExcludeHandler from \"./ExcludeHandler\";\nimport RequirementInterweave from \"./RequirementInterweave\";\n\nconst CardStructure = ({\n  title,\n  description,\n  points,\n  handleClick,\n  isDrawback,\n  picked,\n  disabled,\n  exclude,\n  required,\n  customRequirementText,\n  ...otherProps\n}) => {\n  const normalColor = isDrawback ? \"#292929ff\" : \"black\";\n\n  console.log(customRequirementText);\n  return (\n    <Card style={{ backgroundColor: !picked ? normalColor : \"green\" }}>\n      <Button onClick={handleClick} disabled={disabled}>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Title text={title} isChoice />\n          </Grid>\n          {customRequirementText && (\n            <Grid item xs={12}>\n              <RequirementInterweave text={customRequirementText} />\n            </Grid>\n          )}\n          {(exclude?.length !== 0 || required?.length !== 0) &&\n            (exclude?.length || required?.length) &&\n            !customRequirementText && (\n              <Grid item xs={12}>\n                <ExcludeHandler excludes={exclude} requires={required} />\n              </Grid>\n            )}\n          <Grid item xs={12}>\n            <PointHandler points={points} />\n          </Grid>\n          <Grid item xs={12}>\n            <Description text={description} isChoice />\n          </Grid>\n        </Grid>\n      </Button>\n    </Card>\n  );\n};\n\nCardStructure.defaultProps = {\n  exclude: [],\n  disabled: false,\n};\n\nexport default CardStructure;\n","import { Divider, Grid } from \"@material-ui/core\";\nimport { find } from \"lodash\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setAppearance,\n  setBodyFigure,\n  setBodySize,\n  setBreastSize,\n  setButtSize,\n  setGender,\n  setHairColor,\n  updateDrawbacks,\n  updateGenitals,\n} from \"../../app/choicesSlice\";\nimport {\n  getChoicesExcludingSectionSpecificAsFlatArray,\n  getCurrentLocationsChoicesAsArray,\n  getDrawbacks,\n} from \"../../app/selectors\";\nimport { getLocation } from \"../../app/navigationSlice\";\nimport { getTitles, checkIfDisabled } from \"../../utils\";\n\nimport CardStructure from \"./CardStructure\";\n\nconst actionsByLocation = {\n  gender: setGender,\n  appearance: setAppearance,\n  hair_color: setHairColor,\n  body_figure: setBodyFigure,\n  body_size: setBodySize,\n  breast_size: setBreastSize,\n  butt_size: setButtSize,\n  genitals: updateGenitals,\n};\n\nconst BasicCard = ({ title, id, ...otherProps }) => {\n  const dispatch = useDispatch();\n  const drawback = useSelector((state) => {\n    return find(state.data.drawbacks, (drawback) =>\n      drawback?.connectedChoiceIDs.includes(id)\n    );\n  });\n  const currentDrawbacks = useSelector(getDrawbacks);\n  const location = useSelector(getLocation);\n  const currentLocationChoices = useSelector(getCurrentLocationsChoicesAsArray);\n  const allChoices = useSelector(getChoicesExcludingSectionSpecificAsFlatArray);\n  const isDisabled = checkIfDisabled(drawback, allChoices);\n\n  return (\n    <Grid container spacing={1} style={{ backgroundColor: \"black\" }}>\n      <Grid item xs={12}>\n        <CardStructure\n          title={title}\n          handleClick={() =>\n            dispatch(actionsByLocation[location]({ title, id, ...otherProps }))\n          }\n          picked={getTitles(currentLocationChoices).includes(title)}\n          {...otherProps}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <CardStructure\n          handleClick={() => dispatch(updateDrawbacks(drawback))}\n          isDrawback\n          picked={getTitles(currentDrawbacks).includes(drawback?.title)}\n          disabled={isDisabled}\n          {...drawback}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BasicCard;\n","import {\n  Grid,\n  GridList,\n  GridListTile,\n  isWidthUp,\n  withWidth,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport BasicCard from \"../choice-card/BasicCard\";\n\nconst ChoiceList = ({ width }) => {\n  const { title, cols, choices } = useSelector(getCurrentSection);\n\n  return (\n    <Grid container>\n      <GridList\n        cellHeight=\"auto\"\n        cols={isWidthUp(\"sm\", width) ? cols : 1}\n        spacing={32}\n      >\n        {choices?.map((choice, index) => {\n          return (\n            <GridListTile key={`choice-${title}-${index}`}>\n              <BasicCard {...choice} />\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </Grid>\n  );\n};\n\nexport default withWidth()(ChoiceList);\n","import {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateGenderChange } from \"../../../app/choicesSlice\";\nimport { getGenderChange } from \"../../../app/selectors\";\n\nexport const GenderChange = () => {\n  const dispatch = useDispatch();\n  const changingGender = useSelector(getGenderChange);\n\n  return (\n    <>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Are you changing your gender?</FormLabel>\n        <FormGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={changingGender}\n          row\n          onChange={() => dispatch(updateGenderChange(!changingGender))}\n          style={{ justifyContent: \"center\" }}\n        >\n          <FormControlLabel\n            control={\n              <Checkbox value={changingGender} checked={changingGender} />\n            }\n            label={changingGender ? \"Yes\" : \"No\"}\n          />\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport { getLocation } from \"../../app/navigationSlice\";\nimport { GenderChange } from \"./section-specific-components/GenderChange\";\n\nconst SectionSpecificComponentHandler = () => {\n  const currentSection = useSelector(getLocation);\n  const sectionComponents = {\n    gender: <GenderChange />,\n  };\n  return (\n    <Grid container justify=\"center\">\n      {sectionComponents[currentSection] || null}\n    </Grid>\n  );\n};\n\nexport default SectionSpecificComponentHandler;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport ChoiceList from \"../choice-list\";\nimport Opener from \"../opener\";\nimport SectionSpecificComponentHandler from \"./SectionSpecificComponentHandler\";\n\nconst Section = () => {\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Opener />\n      </Grid>\n      <Grid item xs={12}>\n        <SectionSpecificComponentHandler />\n      </Grid>\n      <Grid item xs={12}>\n        <ChoiceList />\n      </Grid>\n      <Grid item xs={12}>\n        <Opener isCloser />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { getSectionKeys } from \"../../app/dataSlice\";\nimport Section from \"../section\";\n\nconst SectionRoutes = () => {\n  const routePaths = useSelector(getSectionKeys);\n  return (\n    <>\n      {routePaths.map((route, index) => {\n        return (\n          <Route path={`/${route}`} key={`section-route-${index}`}>\n            <Section />\n          </Route>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SectionRoutes;\n","import { Button, Grid } from \"@material-ui/core\";\nimport { startCase } from \"lodash\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getSectionKeys } from \"../../app/dataSlice\";\nimport { updateLocation } from \"../../app/navigationSlice\";\n\nconst NavDrawerLinks = ({ handleSelect }) => {\n  const dispatch = useDispatch();\n  const links = useSelector(getSectionKeys);\n  return (\n    <Grid container>\n      {links.map((link, ind) => {\n        return (\n          <Grid item xs={12} key={`navDrawerLinks-link-${ind}`}>\n            <Button\n              fullWidth\n              onClick={() => {\n                dispatch(updateLocation(link));\n                handleSelect(false);\n              }}\n              component={Link}\n              to={`/${link}`}\n            >\n              {startCase(link)}\n            </Button>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default NavDrawerLinks;\n","import { Drawer, IconButton } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport NavDrawerLinks from \"./NavDrawerLinks\";\n\nconst NavDrawerButton = () => {\n  const [open, toggleOpen] = useState(false);\n  return (\n    <>\n      <IconButton onClick={() => toggleOpen(!open)}>\n        <Menu style={{ color: \"white\" }} fontSize=\"large\" />\n      </IconButton>\n      <Drawer open={open} onClose={() => toggleOpen(!open)}>\n        <NavDrawerLinks handleSelect={toggleOpen} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default NavDrawerButton;\n","import { AppBar, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCompiledPoints } from \"../../app/selectors\";\nimport NavDrawerButton from \"./NavDrawerButton\";\n\nconst NaviationBar = () => {\n  const points = useSelector(getCompiledPoints);\n\n  return (\n    <AppBar position=\"fixed\">\n      <Grid container justify=\"space-between\">\n        <Grid item>\n          <NavDrawerButton />\n        </Grid>\n        <Grid item>\n          <Grid\n            container\n            alignContent=\"center\"\n            style={{ height: \"100%\", paddingRight: \"16px\" }}\n          >\n            <Typography>{points.power}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default NaviationBar;\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport \"./App.css\";\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Opener from \"./components/opener\";\r\nimport SectionRoutes from \"./components/section-routes\";\r\nimport NaviationBar from \"./components/navigation-bar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <NaviationBar />\r\n        <Switch>\r\n          <div style={{ padding: \"64px 8px\", overflowX: \"hidden\" }}>\r\n            <SectionRoutes />\r\n            <Route path=\"/\" render={() => <Redirect to=\"/opening\" />} />\r\n          </div>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport navigationReducer from \"./navigationSlice\";\r\nimport dataReducer from \"./dataSlice\";\r\nimport choicesReduces from \"./choicesSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    navigation: navigationReducer,\r\n    data: dataReducer,\r\n    choices: choicesReduces,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}