{"version":3,"sources":["features/counter/Counter.module.css","logo.svg","features/counter/counterSlice.js","data/index.js","app/navigationSlice.js","app/dataSlice.js","components/title/index.js","components/description/Matcher.js","components/description/index.js","components/opener/index.js","app/choicesSlice.js","utils/index.js","components/choice-card/PointHandler.js","components/choice-card/CardStructure.js","components/choice-card/BasicCard.js","components/choice-list/index.js","components/section/section-specific-components/GenderChange.js","components/section/SectionSpecificComponentHandler.js","components/section/index.js","components/section-routes/index.js","components/navigation-bar/NavDrawerLinks.js","components/navigation-bar/NavDrawerButton.js","components/navigation-bar/index.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","counterSlice","createSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","cyoaData","navigationSlice","location","last","window","href","split","updateLocation","getLocation","navigation","dataSlice","getSections","data","sections","getSectionKeys","createSelector","Object","keys","getCurrentSection","Title","text","isChoice","Grid","container","justify","Typography","variant","style","textTransform","color","defaultProps","PowerPointsMatcher","str","result","match","index","length","valid","children","props","className","Matcher","Description","map","ind","content","matchers","defautProps","Opener","useSelector","title","description","spacing","backgroundColor","item","xs","choicesSlice","sectionSpecific","genderChange","gender","points","power","drawbacks","updateGenderChange","setGender","updateDrawbacks","drawback","includes","filter","getGenderChange","choices","getChoices","getChoicesExcludingDrawbacks","filters","reduce","acc","choiceSection","key","getChoicesExcludingDrawbacksAsFlatArray","flatMap","Array","isArray","getDrawbacks","getCurrentLocationsChoices","getCurrentLocationsChoicesAsArray","currentChoices","genderPointsHandler","isChangingGender","drawbacksPointHandler","choicesExcludingDrawbacks","choicesExcludingDrawbacksTitles","choice","sum","connectedChoice","getCompiledPoints","lossOrGain","num","toString","getTitles","objOrArr","PointHandler","pointsOfType","pointType","CardStructure","handleClick","isDrawback","picked","normalColor","Card","Button","onClick","actionsByLocation","BasicCard","otherProps","dispatch","useDispatch","find","currentDrawbacks","withWidth","width","cols","console","log","GridList","cellHeight","isWidthUp","GridListTile","GenderChange","changingGender","FormControl","component","FormLabel","FormGroup","aria-label","row","onChange","justifyContent","FormControlLabel","control","Checkbox","checked","label","SectionSpecificComponentHandler","currentSection","sectionComponents","Section","SectionRoutes","routePaths","route","path","NavDrawerLinks","handleSelect","links","link","fullWidth","Link","to","NavDrawerButton","useState","open","toggleOpen","IconButton","Menu","fontSize","Drawer","onClose","NaviationBar","AppBar","position","alignContent","height","paddingRight","App","padding","overflowX","render","configureStore","reducer","counter","counterReducer","navigationReducer","dataReducer","choicesReduces","Boolean","hostname","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17ded6de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__1C_4f\",\"value\":\"Counter_value__1d0te\",\"button\":\"Counter_button__1xpSV\",\"textbox\":\"Counter_textbox__3ODaX\",\"asyncButton\":\"Counter_asyncButton__2UAr3 Counter_button__1xpSV\"};","export default __webpack_public_path__ + \"static/media/logo.db36153e.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import CYOA from \"./cyoa.json\";\n\nexport const cyoaData = CYOA;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { last } from \"lodash\";\n\nexport const navigationSlice = createSlice({\n  name: \"navigation\",\n  initialState: {\n    location: last(window.location.href.split(\"/\")),\n  },\n  reducers: {\n    updateLocation: (state, action) => {\n      state.location = action.payload;\n    },\n  },\n});\n\nexport const { updateLocation } = navigationSlice.actions;\n\nexport const getLocation = (state) => state.navigation.location;\n\nexport default navigationSlice.reducer;\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport { last } from \"lodash\";\nimport { cyoaData } from \"../data\";\nimport { getLocation } from \"./navigationSlice\";\n\nexport const dataSlice = createSlice({\n  name: \"data\",\n  initialState: cyoaData,\n  reducers: {},\n});\n\nexport const getSections = (state) => state.data.sections;\n\nexport const getSectionKeys = createSelector(getSections, (sections) => {\n  return Object.keys(sections);\n});\n\nexport const getCurrentSection = createSelector(\n  getLocation,\n  getSections,\n  (location, sections) => {\n    return sections[location];\n  }\n);\n\nexport default dataSlice.reducer;\n","import { Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Title = ({ text, isChoice }) => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography\n        variant={isChoice ? \"h4\" : \"h2\"}\n        style={{ textTransform: \"uppercase\", color: \"white\" }}\n      >\n        {text}\n      </Typography>\n    </Grid>\n  );\n};\n\nTitle.defaultProps = {\n  text: \"\",\n  isChoice: false,\n};\n\nexport default Title;\n","import { Matcher } from \"interweave\";\n\nexport class PowerPointsMatcher extends Matcher {\n  match(str) {\n    const result = str.match(/Power Points/);\n\n    if (!result) {\n      return null;\n    }\n\n    return {\n      index: result.index,\n      length: result[0].length,\n      match: result[0],\n      valid: true,\n    };\n  }\n\n  replaceWith(children, props) {\n    return (\n      <span className=\"Interweave-Blue\" {...props}>\n        {children}\n      </span>\n    );\n  }\n\n  asTag() {\n    return \"span\";\n  }\n}\n","import { Grid, Typography } from \"@material-ui/core\";\nimport Interweave from \"interweave\";\nimport React, { Fragment } from \"react\";\nimport { PowerPointsMatcher } from \"./Matcher\";\n\nconst Description = ({ text, isChoice }) => {\n  return (\n    <Grid container justify=\"center\">\n      <Typography style={{ color: \"white\" }}>\n        {text.map((str, ind) => {\n          return (\n            <Fragment key={`interweave-desc-${ind}`}>\n              <Interweave\n                content={str}\n                matchers={[new PowerPointsMatcher(\"PP\")]}\n              />\n              {text.length - 1 !== ind && (\n                <>\n                  <br />\n                  <br />\n                </>\n              )}\n            </Fragment>\n          );\n        })}\n      </Typography>\n    </Grid>\n  );\n};\n\nDescription.defautProps = {\n  text: [],\n};\n\nexport default Description;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport Title from \"../title\";\nimport Description from \"../description\";\n\nconst Opener = () => {\n  const { title, description } = useSelector(getCurrentSection);\n\n  return (\n    <Grid container spacing={4} style={{ backgroundColor: \"#bb001cff\" }}>\n      <Grid item xs={12}>\n        <Title text={title} />\n      </Grid>\n      <Grid item xs={12}>\n        <Description text={description} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Opener;\n","import { createSelector, createSlice } from \"@reduxjs/toolkit\";\nimport { reduce, last, sum, flatMap } from \"lodash\";\nimport { getLocation } from \"./navigationSlice\";\n\nexport const choicesSlice = createSlice({\n  name: \"choices\",\n  initialState: {\n    sectionSpecific: {\n      genderChange: true,\n    },\n    gender: {\n      points: {\n        power: 0,\n      },\n    },\n    drawbacks: [],\n  },\n  reducers: {\n    updateGenderChange: (state, action) => {\n      state.sectionSpecific = {\n        ...state.sectionSpecific,\n        genderChange: action.payload,\n      };\n    },\n    setGender: (state, action) => {\n      state.gender = action.payload;\n    },\n    updateDrawbacks: (state, action) => {\n      const titles = state.drawbacks.map((drawback) => drawback.title);\n      if (titles.includes(action.payload.title)) {\n        state.drawbacks = [\n          ...state.drawbacks.filter(\n            (drawback) => drawback.title !== action.payload.title\n          ),\n        ];\n      } else {\n        state.drawbacks = [...state.drawbacks, action.payload];\n      }\n    },\n  },\n});\n\nexport const {\n  updateGenderChange,\n  setGender,\n  updateDrawbacks,\n} = choicesSlice.actions;\n\nexport const getSectionSpecific = (state) => state.choices.sectionSpecific;\n\nexport const getGenderChange = createSelector(\n  getSectionSpecific,\n  (sectionSpecific) => {\n    return sectionSpecific.genderChange;\n  }\n);\n\nexport const getChoices = (state) => state.choices;\n\nexport const getChoicesExcludingDrawbacks = createSelector(\n  getChoices,\n  (choices) => {\n    const filters = [\"drawbacks\", \"sectionSpecific\"];\n    return reduce(\n      choices,\n      (acc, choiceSection, key) => {\n        if (!filters.includes(key)) {\n          acc[key] = choiceSection;\n        }\n        return acc;\n      },\n      {}\n    );\n  }\n);\n\nexport const getChoicesExcludingDrawbacksAsFlatArray = createSelector(\n  getChoicesExcludingDrawbacks,\n  (choices) => {\n    return flatMap(choices, (choiceSection) => {\n      return Array.isArray(choiceSection) ? choiceSection : [choiceSection];\n    });\n  }\n);\n\nexport const getGender = (state) => state.choices.gender;\n\nexport const getDrawbacks = (state) => state.choices.drawbacks;\n\nexport const getCurrentLocationsChoices = createSelector(\n  getChoices,\n  getLocation,\n  (choices, location) => {\n    return choices[location] || [];\n  }\n);\n\nexport const getCurrentLocationsChoicesAsArray = createSelector(\n  getCurrentLocationsChoices,\n  (currentChoices) => {\n    return Array.isArray(currentChoices) ? currentChoices : [currentChoices];\n  }\n);\n\nconst genderPointsHandler = createSelector(\n  getGender,\n  getGenderChange,\n  (gender, isChangingGender) => {\n    if (isChangingGender && gender?.title) {\n      return gender.points.power + 10;\n    }\n    return gender.points.power;\n  }\n);\n\nconst drawbacksPointHandler = createSelector(\n  getDrawbacks,\n  getChoicesExcludingDrawbacksAsFlatArray,\n  (drawbacks, choicesExcludingDrawbacks) => {\n    const choicesExcludingDrawbacksTitles = choicesExcludingDrawbacks.map(\n      (choice) => choice.title\n    );\n    return sum(\n      drawbacks.map((drawback) => {\n        if (\n          choicesExcludingDrawbacksTitles.includes(drawback.connectedChoice)\n        ) {\n          return drawback.points.power + 3;\n        }\n        return drawback.points.power;\n      })\n    );\n  }\n);\n\nconst compilePoints = (state) => {\n  const points = {\n    power: sum([0, genderPointsHandler(state), drawbacksPointHandler(state)]),\n  };\n  return points;\n};\n\nexport const getCompiledPoints = createSelector(\n  compilePoints,\n  (points) => points\n);\n\nexport default choicesSlice.reducer;\n","export const lossOrGain = (num = 0) => {\n  if (num > 0) {\n    return `+${num}`;\n  } else if (num < 0) {\n    return `-${num}`;\n  }\n  return num.toString();\n};\n\nexport const getTitles = (objOrArr) => {\n  return Array.isArray(objOrArr)\n    ? objOrArr.map((data) => data.title)\n    : objOrArr.title;\n};\n","import { Typography } from \"@material-ui/core\";\nimport { map } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport { lossOrGain } from \"../../utils\";\n\nconst PointHandler = ({ points }) => {\n  return (\n    <Typography style={{ color: \"white\" }}>\n      {map(points, (pointsOfType, pointType) => {\n        return (\n          <Fragment key={`${pointType}-fragment`}>\n            {pointsOfType >= 0 ? \"Gain: \" : \"Cost: \"}\n            <span style={{ color: \"blue\" }}>{lossOrGain(pointsOfType)}</span>\n          </Fragment>\n        );\n      })}\n    </Typography>\n  );\n};\n\nexport default PointHandler;\n","import { Button, Card, Grid, Typography } from \"@material-ui/core\";\nimport React, { Fragment } from \"react\";\nimport Description from \"../description\";\nimport Title from \"../title\";\nimport { lossOrGain } from \"../../utils\";\nimport { map } from \"lodash\";\nimport PointHandler from \"./PointHandler\";\n\nconst CardStructure = ({\n  title,\n  description,\n  points,\n  handleClick,\n  isDrawback,\n  picked,\n  ...otherProps\n}) => {\n  const normalColor = isDrawback ? \"#292929ff\" : \"black\";\n  return (\n    <Card style={{ backgroundColor: !picked ? normalColor : \"green\" }}>\n      <Button onClick={handleClick}>\n        <Grid container>\n          <Grid item xs={12}>\n            <Title text={title} isChoice />\n          </Grid>\n          <Grid item xs={12}>\n            <PointHandler points={points} />\n          </Grid>\n          <Grid item xs={12}>\n            <Description text={description} isChoice />\n          </Grid>\n        </Grid>\n      </Button>\n    </Card>\n  );\n};\n\nexport default CardStructure;\n","import { Divider, Grid } from \"@material-ui/core\";\nimport { find } from \"lodash\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentLocationsChoicesAsArray,\n  getDrawbacks,\n  setGender,\n  updateDrawbacks,\n} from \"../../app/choicesSlice\";\nimport { getLocation } from \"../../app/navigationSlice\";\nimport { getTitles } from \"../../utils\";\n\nimport CardStructure from \"./CardStructure\";\n\nconst actionsByLocation = {\n  gender: setGender,\n};\n\nconst BasicCard = ({ title, ...otherProps }) => {\n  const dispatch = useDispatch();\n  const drawback = useSelector((state) =>\n    find(state.data.drawbacks, { connectedChoice: title })\n  );\n  const currentDrawbacks = useSelector(getDrawbacks);\n  const location = useSelector(getLocation);\n  const currentChoices = useSelector(getCurrentLocationsChoicesAsArray);\n\n  return (\n    <Grid container spacing={1} style={{ backgroundColor: \"black\" }}>\n      <Grid item xs={12}>\n        <CardStructure\n          title={title}\n          handleClick={() =>\n            dispatch(actionsByLocation[location]({ title, ...otherProps }))\n          }\n          picked={getTitles(currentChoices).includes(title)}\n          {...otherProps}\n        />\n      </Grid>\n      {/* <Grid item xs={12}>\n        <Divider />\n      </Grid> */}\n      <Grid item xs={12}>\n        <CardStructure\n          handleClick={() => dispatch(updateDrawbacks(drawback))}\n          isDrawback\n          picked={getTitles(currentDrawbacks).includes(drawback.title)}\n          {...drawback}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BasicCard;\n","import {\n  Grid,\n  GridList,\n  GridListTile,\n  isWidthUp,\n  withTheme,\n  withWidth,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport BasicCard from \"../choice-card/BasicCard\";\nimport CardStructure from \"../choice-card/CardStructure\";\n\nconst ChoiceList = ({ width }) => {\n  const { title, cols, choices } = useSelector(getCurrentSection);\n\n  console.log(width);\n  return (\n    <Grid container>\n      <GridList\n        cellHeight=\"auto\"\n        cols={isWidthUp(\"sm\", width) ? cols : 1}\n        spacing={32}\n      >\n        {choices?.map((choice, index) => {\n          return (\n            <GridListTile key={`choice-${title}-${index}`}>\n              <BasicCard {...choice} />\n            </GridListTile>\n          );\n        })}\n      </GridList>\n    </Grid>\n  );\n};\n\nexport default withWidth()(ChoiceList);\n","import {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n  Grid,\n  Radio,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getGenderChange, updateGenderChange } from \"../../../app/choicesSlice\";\n\nexport const GenderChange = () => {\n  const dispatch = useDispatch();\n  const changingGender = useSelector(getGenderChange);\n\n  return (\n    <>\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Are you changing your gender?</FormLabel>\n        <FormGroup\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={changingGender}\n          row\n          onChange={() => dispatch(updateGenderChange(!changingGender))}\n          style={{ justifyContent: \"center\" }}\n        >\n          <FormControlLabel\n            control={\n              <Checkbox value={changingGender} checked={changingGender} />\n            }\n            label={changingGender ? \"Yes\" : \"No\"}\n          />\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n};\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentSection } from \"../../app/dataSlice\";\nimport { getLocation } from \"../../app/navigationSlice\";\nimport { GenderChange } from \"./section-specific-components/GenderChange\";\n\nconst SectionSpecificComponentHandler = () => {\n  const currentSection = useSelector(getLocation);\n  const sectionComponents = {\n    gender: <GenderChange />,\n  };\n  return (\n    <Grid container justify=\"center\">\n      {sectionComponents[currentSection] || null}\n    </Grid>\n  );\n};\n\nexport default SectionSpecificComponentHandler;\n","import { Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport ChoiceList from \"../choice-list\";\nimport Opener from \"../opener\";\nimport SectionSpecificComponentHandler from \"./SectionSpecificComponentHandler\";\n\nconst Section = () => {\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Opener />\n      </Grid>\n      <Grid item xs={12}>\n        <SectionSpecificComponentHandler />\n      </Grid>\n      <Grid item xs={12}>\n        <ChoiceList />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { getSectionKeys } from \"../../app/dataSlice\";\nimport Section from \"../section\";\n\nconst SectionRoutes = () => {\n  const routePaths = useSelector(getSectionKeys);\n  return (\n    <>\n      {routePaths.map((route, index) => {\n        return (\n          <Route path={`/${route}`} key={`section-route-${index}`}>\n            <Section />\n          </Route>\n        );\n      })}\n    </>\n  );\n};\n\nexport default SectionRoutes;\n","import { Button, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getSectionKeys } from \"../../app/dataSlice\";\nimport { updateLocation } from \"../../app/navigationSlice\";\n\nconst NavDrawerLinks = ({ handleSelect }) => {\n  const dispatch = useDispatch();\n  const links = useSelector(getSectionKeys);\n  return (\n    <Grid container>\n      {links.map((link, ind) => {\n        return (\n          <Grid item xs={12} key={`navDrawerLinks-link-${ind}`}>\n            <Button\n              fullWidth\n              onClick={() => {\n                dispatch(updateLocation(link));\n                handleSelect(false);\n              }}\n              component={Link}\n              to={`/${link}`}\n            >\n              {link}\n            </Button>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default NavDrawerLinks;\n","import { Drawer, IconButton } from \"@material-ui/core\";\nimport { Menu } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport NavDrawerLinks from \"./NavDrawerLinks\";\n\nconst NavDrawerButton = () => {\n  const [open, toggleOpen] = useState(false);\n  return (\n    <>\n      <IconButton onClick={() => toggleOpen(!open)}>\n        <Menu fontSize=\"large\" />\n      </IconButton>\n      <Drawer open={open} onClose={() => toggleOpen(!open)}>\n        <NavDrawerLinks handleSelect={toggleOpen} />\n      </Drawer>\n    </>\n  );\n};\n\nexport default NavDrawerButton;\n","import { AppBar, Grid, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getCompiledPoints } from \"../../app/choicesSlice\";\nimport NavDrawerButton from \"./NavDrawerButton\";\n\nconst NaviationBar = () => {\n  const points = useSelector(getCompiledPoints);\n\n  return (\n    <AppBar position=\"fixed\">\n      <Grid container justify=\"space-between\">\n        <Grid item>\n          <NavDrawerButton />\n        </Grid>\n        <Grid item>\n          <Grid\n            container\n            alignContent=\"center\"\n            style={{ height: \"100%\", paddingRight: \"16px\" }}\n          >\n            <Typography>{points.power}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default NaviationBar;\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport { Counter } from \"./features/counter/Counter\";\r\nimport \"./App.css\";\r\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Opener from \"./components/opener\";\r\nimport SectionRoutes from \"./components/section-routes\";\r\nimport NaviationBar from \"./components/navigation-bar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <NaviationBar />\r\n        <Switch>\r\n          <div style={{ padding: \"64px 8px\", overflowX: \"hidden\" }}>\r\n            <SectionRoutes />\r\n            <Route path=\"/\" render={() => <Redirect to=\"/opening\" />} />\r\n          </div>\r\n        </Switch>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from \"../features/counter/counterSlice\";\r\nimport navigationReducer from \"./navigationSlice\";\r\nimport dataReducer from \"./dataSlice\";\r\nimport choicesReduces from \"./choicesSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    navigation: navigationReducer,\r\n    data: dataReducer,\r\n    choices: choicesReduces,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}